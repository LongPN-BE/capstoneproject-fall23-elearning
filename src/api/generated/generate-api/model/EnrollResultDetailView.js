/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CourseResultDetailView from './CourseResultDetailView';
import StudentResultDetailView from './StudentResultDetailView';
import SyllabusResultDetailView from './SyllabusResultDetailView';

/**
 * The EnrollResultDetailView model module.
 * @module model/EnrollResultDetailView
 * @version v1
 */
class EnrollResultDetailView {
    /**
     * Constructs a new <code>EnrollResultDetailView</code>.
     * @alias module:model/EnrollResultDetailView
     */
    constructor() { 
        
        EnrollResultDetailView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnrollResultDetailView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnrollResultDetailView} obj Optional instance to populate.
     * @return {module:model/EnrollResultDetailView} The populated <code>EnrollResultDetailView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnrollResultDetailView();

            if (data.hasOwnProperty('requestDate')) {
                obj['requestDate'] = ApiClient.convertToType(data['requestDate'], 'Date');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('paymentStatus')) {
                obj['paymentStatus'] = ApiClient.convertToType(data['paymentStatus'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('finishDate')) {
                obj['finishDate'] = ApiClient.convertToType(data['finishDate'], 'Date');
            }
            if (data.hasOwnProperty('student')) {
                obj['student'] = StudentResultDetailView.constructFromObject(data['student']);
            }
            if (data.hasOwnProperty('course')) {
                obj['course'] = CourseResultDetailView.constructFromObject(data['course']);
            }
            if (data.hasOwnProperty('syllabus')) {
                obj['syllabus'] = SyllabusResultDetailView.constructFromObject(data['syllabus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnrollResultDetailView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnrollResultDetailView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['paymentStatus'] && !(typeof data['paymentStatus'] === 'string' || data['paymentStatus'] instanceof String)) {
            throw new Error("Expected the field `paymentStatus` to be a primitive type in the JSON string but got " + data['paymentStatus']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `student`
        if (data['student']) { // data not null
          StudentResultDetailView.validateJSON(data['student']);
        }
        // validate the optional field `course`
        if (data['course']) { // data not null
          CourseResultDetailView.validateJSON(data['course']);
        }
        // validate the optional field `syllabus`
        if (data['syllabus']) { // data not null
          SyllabusResultDetailView.validateJSON(data['syllabus']);
        }

        return true;
    }


}



/**
 * @member {Date} requestDate
 */
EnrollResultDetailView.prototype['requestDate'] = undefined;

/**
 * @member {Number} amount
 */
EnrollResultDetailView.prototype['amount'] = undefined;

/**
 * @member {String} paymentStatus
 */
EnrollResultDetailView.prototype['paymentStatus'] = undefined;

/**
 * @member {module:model/EnrollResultDetailView.StatusEnum} status
 */
EnrollResultDetailView.prototype['status'] = undefined;

/**
 * @member {Date} finishDate
 */
EnrollResultDetailView.prototype['finishDate'] = undefined;

/**
 * @member {module:model/StudentResultDetailView} student
 */
EnrollResultDetailView.prototype['student'] = undefined;

/**
 * @member {module:model/CourseResultDetailView} course
 */
EnrollResultDetailView.prototype['course'] = undefined;

/**
 * @member {module:model/SyllabusResultDetailView} syllabus
 */
EnrollResultDetailView.prototype['syllabus'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EnrollResultDetailView['StatusEnum'] = {

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE"
};



export default EnrollResultDetailView;

